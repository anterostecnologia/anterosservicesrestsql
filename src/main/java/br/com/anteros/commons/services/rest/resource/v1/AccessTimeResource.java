package br.com.anteros.commons.services.rest.resource.v1;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.context.annotation.Lazy;
import org.springframework.http.HttpStatus;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;

import br.com.anteros.security.store.sql.domain.AccessTime;
import br.com.anteros.security.store.sql.domain.Action;
import br.com.anteros.commons.services.rest.service.AccessTimeService;
import br.com.anteros.persistence.session.service.SQLService;
import br.com.anteros.security.spring.AnterosSecurityManager;
import br.com.anteros.spring.web.resource.AbstractSQLResourceRest;
import br.com.anteros.persistence.session.repository.Page;
import br.com.anteros.persistence.session.repository.PageRequest;
import br.com.anteros.persistence.session.repository.Pageable;
import br.com.anteros.persistence.session.repository.impl.PageImpl;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

/**
*  Generated by Anteros Generator Maven Plugin at 29/12/2019 08:16:42
**/

@RestController
@RequestMapping(value = "/v1/accessTime")
public class AccessTimeResource extends AbstractSQLResourceRest<AccessTime, Long> {

	@Autowired
	@Lazy
	private AccessTimeService accessTimeService;

	@Autowired
	@Lazy
	protected AnterosSecurityManager anterosSecurityManager;

	@Override
	public SQLService<AccessTime, Long> getService() {
		return accessTimeService;
	}
	
	@Override
	protected Page<AccessTime> createConcretePage(List<AccessTime> content, PageRequest pageRequest,
			long totalElements) {
		return new PageAccessTime(content, pageRequest, totalElements);
	}

	class PageAccessTime extends PageImpl<AccessTime> {
		public PageAccessTime(List<AccessTime> content) {
			super(content);
		}

		public PageAccessTime(List<AccessTime> content, Pageable pageable, long total) {
			super(content, pageable, total);
		}
	}
	
	@Override
	protected List<AccessTime> createConcreteList(List<AccessTime> result) {
		return new ListAccessTime(result);
	}
	
	class ListAccessTime extends ArrayList<AccessTime>{
		public ListAccessTime(Collection<? extends AccessTime> c) {
			super(c);
		}
	}
	
	
}